# Task ID: 6
# Title: Portfolio and Project Detail Pages
# Status: done
# Dependencies: 3, 4
# Priority: medium
# Description: Develop the portfolio listing page and individual project detail pages with case studies.
# Details:
1. Create data models for projects:
```typescript
// src/types/project.ts
export interface Project {
  id: string
  title: string
  slug: string
  client: string
  category: string
  tags: string[]
  description: string
  challenge: string
  solution: string
  results: string
  testimonial?: {
    quote: string
    author: string
    position: string
    company: string
  }
  images: {
    thumbnail: string
    hero: string
    gallery: string[]
  }
  technologies: string[]
  url?: string
  date: string
}
```

2. Create sample project data in src/data/projects.ts

3. Implement the PortfolioPage component with filtering:
```tsx
import { useState } from 'react'
import { motion } from 'framer-motion'
import { ProjectCard } from '@/components/ProjectCard'
import { projects } from '@/data/projects'

const categories = ['All', 'Web Development', 'Mobile Apps', 'E-commerce', 'Branding']

export default function PortfolioPage() {
  const [activeCategory, setActiveCategory] = useState('All')
  
  const filteredProjects = activeCategory === 'All' 
    ? projects 
    : projects.filter(project => project.category === activeCategory)
  
  return (
    <div className="container py-12 md:py-20">
      <h1 className="text-4xl font-bold tracking-tight mb-8">Our Portfolio</h1>
      
      <div className="flex overflow-x-auto pb-4 mb-8 gap-2">
        {categories.map(category => (
          <button
            key={category}
            onClick={() => setActiveCategory(category)}
            className={`px-4 py-2 rounded-full whitespace-nowrap ${activeCategory === category 
              ? 'bg-primary text-white' 
              : 'bg-muted hover:bg-muted/80'}`}
          >
            {category}
          </button>
        ))}
      </div>
      
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {filteredProjects.map((project, index) => (
          <motion.div
            key={project.id}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.4, delay: index * 0.1 }}
          >
            <ProjectCard project={project} />
          </motion.div>
        ))}
      </div>
    </div>
  )
}
```

4. Create the ProjectDetailPage component:
```tsx
import { useParams, NavLink } from 'react-router-dom'
import { motion } from 'framer-motion'
import { ArrowLeft, Globe, Calendar } from 'lucide-react'
import { Button } from '@/components/ui/Button'
import { projects } from '@/data/projects'

export default function ProjectDetailPage() {
  const { projectId } = useParams()
  const project = projects.find(p => p.slug === projectId)
  
  if (!project) {
    return <div className="container py-20">Project not found</div>
  }
  
  return (
    <div className="container py-12 md:py-20">
      <NavLink to="/portfolio" className="inline-flex items-center text-muted-foreground hover:text-foreground mb-8">
        <ArrowLeft className="mr-2 h-4 w-4" />
        Back to Portfolio
      </NavLink>
      
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ duration: 0.5 }}
      >
        <img 
          src={project.images.hero} 
          alt={project.title} 
          className="w-full h-[50vh] object-cover rounded-lg mb-8" 
        />
        
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-12">
          <div className="lg:col-span-2">
            <h1 className="text-4xl font-bold tracking-tight mb-4">{project.title}</h1>
            <p className="text-xl text-muted-foreground mb-8">{project.description}</p>
            
            <div className="space-y-8">
              <section>
                <h2 className="text-2xl font-semibold mb-4">The Challenge</h2>
                <p>{project.challenge}</p>
              </section>
              
              <section>
                <h2 className="text-2xl font-semibold mb-4">Our Solution</h2>
                <p>{project.solution}</p>
              </section>
              
              <section>
                <h2 className="text-2xl font-semibold mb-4">Results</h2>
                <p>{project.results}</p>
              </section>
            </div>
          </div>
          
          <div className="lg:col-span-1">
            <div className="bg-muted rounded-lg p-6 sticky top-24">
              <h3 className="text-lg font-semibold mb-4">Project Details</h3>
              
              <div className="space-y-4">
                <div>
                  <p className="text-sm text-muted-foreground">Client</p>
                  <p className="font-medium">{project.client}</p>
                </div>
                
                <div>
                  <p className="text-sm text-muted-foreground">Category</p>
                  <p className="font-medium">{project.category}</p>
                </div>
                
                <div>
                  <p className="text-sm text-muted-foreground">Date</p>
                  <p className="font-medium flex items-center">
                    <Calendar className="h-4 w-4 mr-2" />
                    {project.date}
                  </p>
                </div>
                
                {project.url && (
                  <div>
                    <p className="text-sm text-muted-foreground">Website</p>
                    <a 
                      href={project.url} 
                      target="_blank" 
                      rel="noopener noreferrer"
                      className="font-medium flex items-center text-primary hover:underline"
                    >
                      <Globe className="h-4 w-4 mr-2" />
                      Visit Site
                    </a>
                  </div>
                )}
                
                <div>
                  <p className="text-sm text-muted-foreground">Technologies</p>
                  <div className="flex flex-wrap gap-2 mt-2">
                    {project.technologies.map(tech => (
                      <span key={tech} className="px-2 py-1 bg-background rounded text-xs">
                        {tech}
                      </span>
                    ))}
                  </div>
                </div>
              </div>
              
              <Button className="w-full mt-6">
                <NavLink to="/contact">Start a Similar Project</NavLink>
              </Button>
            </div>
          </div>
        </div>
      </motion.div>
    </div>
  )
}
```

5. Create a ProjectCard component for the portfolio listing
6. Implement image galleries with Swiper or Embla Carousel
7. Add related projects section to project detail pages
8. Implement smooth transitions between portfolio and project details

# Test Strategy:
1. Test portfolio filtering functionality
2. Verify project cards display correctly with proper image loading
3. Test navigation between portfolio and project detail pages
4. Ensure project detail page loads correct data based on URL parameter
5. Test responsive layout on different screen sizes
6. Verify image galleries work correctly with navigation
7. Test related projects navigation
8. Ensure back button works correctly from project detail to portfolio
